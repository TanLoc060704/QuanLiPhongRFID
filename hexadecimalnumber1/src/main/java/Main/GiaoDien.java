/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Main;


import java.awt.Dimension;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.Reader;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.commons.csv.CSVFormat;
import org.apache.commons.csv.CSVParser;
import org.apache.commons.csv.CSVRecord;

/**
 *
 * @author rfid
 */
public class GiaoDien extends javax.swing.JFrame {

    /**
     * Creates new form GiaoDien
     */
    public GiaoDien() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        btn_browse_input = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txt_input = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txt_output = new javax.swing.JTextField();
        btn_browse_output = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txt_name_cus = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txt_hdd = new javax.swing.JTextField();
        btn_run = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        btn_cls = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_nhanvien = new javax.swing.JTable();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        btn_browse_input.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_browse_input.setText("Browse");
        btn_browse_input.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_browse_inputActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("INput File: ");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setText("Excel file: .xlsx, .csv ");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 0));
        jLabel3.setText("Lưu ý: định dạng file theo STT |\tMã Qrcode | EPC | TID | Below QRCode  ");

        txt_input.setEditable(false);
        txt_input.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txt_input.setMaximumSize(new java.awt.Dimension(64, 26));
        txt_input.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_inputActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Output Path: ");

        txt_output.setEditable(false);
        txt_output.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txt_output.setMaximumSize(new java.awt.Dimension(64, 26));

        btn_browse_output.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_browse_output.setText("Browse");
        btn_browse_output.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_browse_outputActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Name Cus: ");

        txt_name_cus.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txt_name_cus.setMaximumSize(new java.awt.Dimension(64, 26));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("HDD: ");

        txt_hdd.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txt_hdd.setMaximumSize(new java.awt.Dimension(64, 26));

        btn_run.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_run.setText("Run");
        btn_run.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_runActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 255));
        jLabel7.setText("Convert EPC To EPC Hex");

        btn_cls.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_cls.setText("Cls");
        btn_cls.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(65, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel1)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(txt_input, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(btn_browse_input))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txt_output, javax.swing.GroupLayout.PREFERRED_SIZE, 516, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btn_browse_output))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txt_hdd, javax.swing.GroupLayout.PREFERRED_SIZE, 516, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btn_run))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txt_name_cus, javax.swing.GroupLayout.PREFERRED_SIZE, 516, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btn_cls, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGap(33, 33, 33))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(288, 288, 288)
                .addComponent(jLabel7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jLabel7)
                .addGap(51, 51, 51)
                .addComponent(jLabel2)
                .addGap(1, 1, 1)
                .addComponent(jLabel3)
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txt_input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_browse_input))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txt_output, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_browse_output))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txt_name_cus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_cls))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txt_hdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_run))
                .addContainerGap(62, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Convert EPC To EPC Hex", jPanel1);

        tbl_nhanvien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "STT", "NHÂN VIÊN", "TRẠNG THÁI", "GHI CHÚ"
            }
        ));
        jScrollPane1.setViewportView(tbl_nhanvien);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 356, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(113, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Phân công công việc phòng RFID", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 808, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 596, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(52, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_browse_inputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_browse_inputActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooserInput = new JFileChooser();
            fileChooserInput.setDialogTitle("chọn các File Excel");
            fileChooserInput.setFileSelectionMode(JFileChooser.FILES_ONLY);
            fileChooserInput.setAcceptAllFileFilterUsed(false);
            fileChooserInput.setMultiSelectionEnabled(true);
            fileChooserInput.setPreferredSize(new Dimension(800,600));
            int returnValue = fileChooserInput.showOpenDialog(null);
            if (returnValue == JFileChooser.APPROVE_OPTION) {
                File[] selectedFile = fileChooserInput.getSelectedFiles();
                StringBuilder sb = new StringBuilder();
                for (File file : selectedFile) {
                    sb.append(file.getAbsolutePath()).append(";");
                }
                txt_input.setText(sb.toString());
            }
    }//GEN-LAST:event_btn_browse_inputActionPerformed

    private void btn_browse_outputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_browse_outputActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooserOutput = new JFileChooser();
            fileChooserOutput.setDialogTitle("Excel Output file");
            fileChooserOutput.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            fileChooserOutput.setAcceptAllFileFilterUsed(false);
            fileChooserOutput.setPreferredSize(new Dimension(800,600));
            int returnValue = fileChooserOutput.showOpenDialog(null);
            if(returnValue == JFileChooser.APPROVE_OPTION){
                File selectedFile = fileChooserOutput.getSelectedFile();
                txt_output.setText(selectedFile.getAbsolutePath());
            }
    }//GEN-LAST:event_btn_browse_outputActionPerformed

    private void btn_runActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_runActionPerformed
        // TODO add your handling code here:
        String txtInput = txt_input.getText();
        String txtOutput = txt_output.getText();
        String nameOfCus = txt_name_cus.getText();
        String hdd = txt_hdd.getText();

        if (txtInput.isEmpty() || txtOutput.isEmpty() || nameOfCus.isEmpty() || hdd.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng điền đầy đủ thông tin.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        File folderCus = new File(txtOutput, nameOfCus);
        if (!folderCus.exists()) {
            folderCus.mkdirs(); 
        }

        File dhhDir = new File(folderCus, hdd);
        if (!dhhDir.exists()) {
            dhhDir.mkdirs();
        }    

        String[] inputFiles = txtInput.split(";");
 
        for (String inputFilePath : inputFiles) {
            File inputFile = new File(inputFilePath.trim());
            if (!inputFile.exists()) {
                JOptionPane.showMessageDialog(this, "File không tồn tại: " + inputFilePath, "Error", JOptionPane.ERROR_MESSAGE);
                continue;
            }
            
            String extension = getFileExtension(inputFile).toLowerCase();
                
            if (extension.equals("xlsx")) {
                processFile(inputFile, dhhDir, hdd);
            } else if (extension.equals("csv")) {
                processCSVFile(inputFile, dhhDir, hdd);
            } else {
                JOptionPane.showMessageDialog(this, "Định dạng file không được hỗ trợ: " + extension, "Error", JOptionPane.ERROR_MESSAGE);
            }
//            processFile(inputFile, dhhDir, hdd);        
        }       
    }//GEN-LAST:event_btn_runActionPerformed

    private String getFileExtension(File file) {
        String fileName = file.getName();
        int lastIndexOfDot = fileName.lastIndexOf('.');
        return (lastIndexOfDot == -1) ? "" : fileName.substring(lastIndexOfDot + 1);
    }
    
    private void txt_inputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_inputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_inputActionPerformed

    private void btn_clsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clsActionPerformed
        // TODO add your handling code here:
        txt_input.setText("");
        txt_output.setText("");
        txt_hdd.setText("");
        txt_name_cus.setText("");
    }//GEN-LAST:event_btn_clsActionPerformed

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        // TODO add your handling code here:
        if(jPanel2.isShowing()){
            System.out.println("123");
        }
    }//GEN-LAST:event_jTabbedPane1StateChanged
    
    private void showdata(){
        String[] dataNhanVien = {
            "Văn Hồng,,"    ,
            "Tấn Phát,,"    ,
            "Dương Hiển,,"  ,
            "Văn Sơn,,"     ,
            "Trung Tình,,"  ,
            "Duyên Anh,,"   ,
            "Tú Kiều,,"     ,
            "Trúc Linh,,"   ,
            "Huỳnh Nga,,"   ,
            "Văn Tài,,"     ,
            "Quốc Thái,,"   ,
            "Tấn Lộc,,"     ,
        };
        
        String[] columnNames = {"STT", "Tên Nhân Viên", "Trạng Thái", "Ghi Chú"};
        Object[][] tableData = new Object[dataNhanVien.length][4];
        for (int i = 0; i < dataNhanVien.length; i++) {
            tableData[i][0] = i + 1; // STT
            tableData[i][1] = dataNhanVien[i]; // Tên Nhân Viên
            tableData[i][2] = ""; // Trạng Thái (để trống)
            tableData[i][3] = ""; // Ghi Chú (để trống)
        }
        DefaultTableModel model = new DefaultTableModel(tableData, columnNames);
        for (String nhanVien : dataNhanVien) {
            
        }

    }
    
    private void processFile(File inputFile, File outputDir, String hdd) {
        String fileName = inputFile.getName();
        String baseName = fileName.substring(0, fileName.lastIndexOf('.'));
        String extension = fileName.substring(fileName.lastIndexOf('.') + 1);
        String outputFileName = hdd + "_" + baseName + "." + extension;
        String outputFilePath = new File(outputDir, outputFileName).getAbsolutePath();

        try (FileInputStream inputStream = new FileInputStream(inputFile);
            Workbook workbook = new XSSFWorkbook(inputStream);
            FileOutputStream outputStream = new FileOutputStream(outputFilePath)) {

            Sheet sheet = workbook.getSheetAt(0);
            int lastColumnIndex = sheet.getRow(0).getLastCellNum();
            Row headerRow = sheet.getRow(0);
            Cell newHeaderCell = headerRow.createCell(lastColumnIndex);
            newHeaderCell.setCellValue("EPC Converted");
            for (Row row : sheet) {
                if (row.getRowNum() == 0) continue;
                Cell epcCell = row.getCell(2); 
                String epcValue = epcCell.getStringCellValue();
                String epcConverted = convertToHexadecimal(epcValue);
                Cell newCell = row.createCell(lastColumnIndex);
                newCell.setCellValue(epcConverted);
            }

            workbook.write(outputStream);
            JOptionPane.showMessageDialog(this, "Chuyển đổi thành công! File đã được lưu tại: " + outputFilePath);

        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(this, "Không thể mở file: " + ex.getMessage() + "\nFile có thể đang được mở bởi một chương trình khác.", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (IOException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Đã xảy ra lỗi: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
       
    private void processCSVFile(File inputFile, File outputDir, String hdd) {
        String fileName = inputFile.getName();
        String baseName = fileName.substring(0, fileName.lastIndexOf('.'));
        String extension = fileName.substring(fileName.lastIndexOf('.') + 1);
        String outputFileName = hdd + "_" + baseName + "." + extension;
        String outputFilePath = new File(outputDir, outputFileName).getAbsolutePath();

        try (Reader reader = new FileReader(inputFile);
            CSVParser csvParser = new CSVParser(reader, CSVFormat.DEFAULT.withFirstRecordAsHeader());
            BufferedWriter writer = new BufferedWriter(new FileWriter(outputFilePath))) {

            // Lấy tiêu đề và thêm cột mới
            List<String> headers = new ArrayList<>(csvParser.getHeaderMap().keySet());
            headers.add("EPC Converted");
            writer.write(String.join(",", headers));
            writer.newLine();

            for (CSVRecord record : csvParser) {
                List<String> row = new ArrayList<>();
                for (String header : csvParser.getHeaderMap().keySet()) {
                    row.add(record.get(header));
                }
                String epcValue = record.get("EPC");
                String epcConverted = convertToHexadecimal(epcValue);
                row.add(epcConverted);
                writer.write(String.join(",", row));
                writer.newLine();
            }

            JOptionPane.showMessageDialog(this, "Chuyển đổi thành công! File đã được lưu tại: " + outputFilePath);

        } catch (IOException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Đã xảy ra lỗi: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    // function convert EPC To Hexadecimal
    private static String convertToHexadecimal(String epcValue) {
        StringBuilder sb = new StringBuilder();
        for (char ch : epcValue.toCharArray()) {
            sb.append(String.format("%02X", (int) ch));
        }
        return sb.toString();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GiaoDien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GiaoDien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GiaoDien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GiaoDien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GiaoDien().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_browse_input;
    private javax.swing.JButton btn_browse_output;
    private javax.swing.JButton btn_cls;
    private javax.swing.JButton btn_run;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tbl_nhanvien;
    private javax.swing.JTextField txt_hdd;
    private javax.swing.JTextField txt_input;
    private javax.swing.JTextField txt_name_cus;
    private javax.swing.JTextField txt_output;
    // End of variables declaration//GEN-END:variables
}
