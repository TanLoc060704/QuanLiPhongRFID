/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Main;

import java.awt.Color;
import java.awt.Component;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Comparator;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultCellEditor;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.event.ListSelectionEvent;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author rfid
 */
public class PhanCongCV extends javax.swing.JFrame {

    private ArrayList<String> dataNhanVien; // Thay thế mảng tĩnh bằng ArrayList
    private ArrayList<String> machines; // Thay thế mảng tĩnh bằng ArrayList
    
    /**
     * Creates new form PhanCongCV
     */
    public PhanCongCV() {
        initComponents();
        loadInit();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabbedPane = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_nhanvien = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txt_ten_may = new javax.swing.JTextField();
        btn_themnv = new javax.swing.JButton();
        btn_suaNv = new javax.swing.JButton();
        btn_xoanv = new javax.swing.JButton();
        txt_note = new javax.swing.JLabel();
        txt_ghi_chu = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btn_them_may = new javax.swing.JButton();
        btn_sua_may = new javax.swing.JButton();
        btn_xoa_may = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        btn_clear = new javax.swing.JButton();
        txt_ten_nhan_vien = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbl_may = new javax.swing.JTable();
        btn_clear1 = new javax.swing.JButton();
        btn_bao_cao = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_bao_cao = new javax.swing.JTable();
        txt_ngay = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tbl_nhanvien.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tbl_nhanvien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "STT", "NHÂN VIÊN", "TRẠNG THÁI", "GHI CHÚ", "Vị Trí", "Máy"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbl_nhanvien);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("QL Nhân Viên");

        jLabel2.setText("Tên Nhân Viên: ");

        txt_ten_may.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        btn_themnv.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_themnv.setText("Thêm");
        btn_themnv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_themnvActionPerformed(evt);
            }
        });

        btn_suaNv.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_suaNv.setText("Sửa");
        btn_suaNv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_suaNvActionPerformed(evt);
            }
        });

        btn_xoanv.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_xoanv.setText("Xóa");
        btn_xoanv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_xoanvActionPerformed(evt);
            }
        });

        txt_note.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        txt_ghi_chu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel3.setText("Ghi Chú:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText(" QL Máy");

        jLabel6.setText("Tên Máy");

        btn_them_may.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_them_may.setText("Thêm");
        btn_them_may.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_them_mayActionPerformed(evt);
            }
        });

        btn_sua_may.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_sua_may.setText("Sửa");
        btn_sua_may.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_sua_mayActionPerformed(evt);
            }
        });

        btn_xoa_may.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_xoa_may.setText("Xóa");
        btn_xoa_may.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_xoa_mayActionPerformed(evt);
            }
        });

        btn_clear.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_clear.setText("Clear");
        btn_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clearActionPerformed(evt);
            }
        });

        txt_ten_nhan_vien.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        tbl_may.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "STT", "TÊN MÁY", "TRẠNG THÁI", "NV ĐỨNG MÁY"
            }
        ));
        jScrollPane3.setViewportView(tbl_may);

        btn_clear1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_clear1.setText("Clear");
        btn_clear1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clear1ActionPerformed(evt);
            }
        });

        btn_bao_cao.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_bao_cao.setText("Báo Cáo");
        btn_bao_cao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_bao_caoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 767, Short.MAX_VALUE)
                    .addComponent(jScrollPane3))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addGap(147, 147, 147))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(115, 115, 115)
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel3)
                                            .addComponent(txt_ghi_chu)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(btn_themnv)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(btn_suaNv)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(btn_xoanv)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(btn_clear))
                                            .addComponent(txt_ten_nhan_vien))
                                        .addGap(24, 24, 24)))))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel6))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(btn_them_may)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btn_sua_may)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btn_xoa_may)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btn_clear1))
                                    .addComponent(txt_ten_may, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(btn_bao_cao)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txt_note, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(29, 29, 29)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_ten_nhan_vien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_ghi_chu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_themnv)
                            .addComponent(btn_suaNv)
                            .addComponent(btn_xoanv)
                            .addComponent(btn_clear))
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(10, 10, 10)
                        .addComponent(txt_ten_may, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_them_may)
                            .addComponent(btn_sua_may)
                            .addComponent(btn_xoa_may)
                            .addComponent(btn_clear1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_bao_cao)
                            .addComponent(txt_note, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabbedPane.addTab("Quản lí nhân sự", jPanel1);

        jPanel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("BẢNG PHÂN CÔNG - CÔNG VIỆC PHÒNG RFID");

        tbl_bao_cao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "STT", "Tên Máy", "Nhân Viên", "Trạng Thái", "Công Việc Chi Tiết"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tbl_bao_cao);

        txt_ngay.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txt_ngay.setText("Ngày: ");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(312, 312, 312)
                        .addComponent(jLabel4))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 985, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txt_ngay, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel4)
                .addGap(22, 22, 22)
                .addComponent(txt_ngay)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(120, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(336, 336, 336))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        tabbedPane.addTab("Temlate Báo Cáo", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(tabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 1119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(tabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 654, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(127, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_themnvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_themnvActionPerformed
        DefaultTableModel model = (DefaultTableModel) tbl_nhanvien.getModel();
        String tenNhanVien = txt_ten_nhan_vien.getText().trim();

        if (tenNhanVien.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Tên nhân viên không được để trống", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        }

        int rowCount = model.getRowCount();
        model.addRow(new Object[]{rowCount + 1, tenNhanVien, false, ""});
        txt_ten_nhan_vien.setText("");
        txt_ghi_chu.setText("");
    }//GEN-LAST:event_btn_themnvActionPerformed

    private void btn_suaNvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_suaNvActionPerformed
        int selectedRow = tbl_nhanvien.getSelectedRow();
        if (selectedRow >= 0) {
            DefaultTableModel model = (DefaultTableModel) tbl_nhanvien.getModel();
            String tenNhanVien = txt_ten_nhan_vien.getText().trim();
            String ghiChu = txt_ghi_chu.getText().trim();

            if (tenNhanVien.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Tên nhân viên không được để trống", "Thông báo", JOptionPane.WARNING_MESSAGE);
                return;
            }

            model.setValueAt(tenNhanVien, selectedRow, 1);
            model.setValueAt(ghiChu, selectedRow, 3);
            txt_ten_nhan_vien.setText("");
            txt_ghi_chu.setText("");
        } else {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn nhân viên để sửa", "Thông báo", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btn_suaNvActionPerformed

    private void btn_xoanvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_xoanvActionPerformed
        // TODO add your handling code here:
        int selectedRow = tbl_nhanvien.getSelectedRow();
        if (selectedRow >= 0) {
            DefaultTableModel model = (DefaultTableModel) tbl_nhanvien.getModel();
            model.removeRow(selectedRow);

            // Cập nhật lại số thứ tự sau khi xóa
            for (int i = 0; i < model.getRowCount(); i++) {
                model.setValueAt(i + 1, i, 0);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn nhân viên để xóa", "Thông báo", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btn_xoanvActionPerformed

    private void btn_them_mayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_them_mayActionPerformed
        // TODO add your handling code here:
        String txtTenMay = txt_ten_may.getText().trim();
        if (!txtTenMay.isEmpty() && validation(txtTenMay)) {
            machines.add(txtTenMay); // Thêm máy vào ArrayList

            // Cập nhật bảng máy
            updateMachineTable();
        } else {
            JOptionPane.showMessageDialog(this, "Tên máy không hợp lệ hoặc đã tồn tại", "Thông báo", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btn_them_mayActionPerformed

    private void btn_sua_mayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_sua_mayActionPerformed
        // TODO add your handling code here:
        int selectedRow = tbl_may.getSelectedRow();
        if (selectedRow >= 0) {
            String newName = txt_ten_may.getText().trim();
            if (!newName.isEmpty()) {
                machines.set(selectedRow, newName); // Cập nhật tên máy trong ArrayList

                // Cập nhật bảng máy
                updateMachineTable();
            } else {
                JOptionPane.showMessageDialog(this, "Tên máy không được để trống", "Thông báo", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn máy để sửa", "Thông báo", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btn_sua_mayActionPerformed

    private void btn_xoa_mayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_xoa_mayActionPerformed
        // TODO add your handling code here:
         int selectedRow = tbl_may.getSelectedRow();
        if (selectedRow >= 0) {
            machines.remove(selectedRow); // Xóa máy khỏi ArrayList

            // Cập nhật bảng máy
            updateMachineTable();
        } else {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn máy để xóa", "Thông báo", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btn_xoa_mayActionPerformed

    private void btn_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clearActionPerformed
        // TODO add your handling code here:
        txt_ten_nhan_vien.setText("");
        txt_ghi_chu.setText("");
    }//GEN-LAST:event_btn_clearActionPerformed

    private void btn_clear1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clear1ActionPerformed
        // TODO add your handling code here:
        txt_ten_may.setText("");
    }//GEN-LAST:event_btn_clear1ActionPerformed

    private void btn_bao_caoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_bao_caoActionPerformed
        DefaultTableModel modelNhanVien = (DefaultTableModel) tbl_nhanvien.getModel();
        DefaultTableModel modelBaoCao = (DefaultTableModel) tbl_bao_cao.getModel();

        LocalDate currentDate = LocalDate.now();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        String formattedDate = currentDate.format(formatter);
        txt_ngay.setText(formattedDate);

        // Clear bảng báo cáo trước khi thêm dữ liệu mới
        modelBaoCao.setRowCount(0);

        // Danh sách lưu trữ nhân viên đã tích và chưa tích
        List<Object[]> checkedEmployees = new ArrayList<>();
        List<Object[]> uncheckedEmployees = new ArrayList<>();

        // Lọc dữ liệu từ bảng nhân viên
        for (int i = 0; i < modelNhanVien.getRowCount(); i++) {
            Object trangThaiObj = modelNhanVien.getValueAt(i, 2);
            Boolean trangThai = trangThaiObj instanceof Boolean ? (Boolean) trangThaiObj : Boolean.FALSE;

            Object[] rowData = new Object[5];
            rowData[0] = i + 1; // STT
            Object tenMay = modelNhanVien.getValueAt(i, 5);
            rowData[1] = tenMay != null ? tenMay : "Không xác định"; // TÊN MÁY
            rowData[2] = modelNhanVien.getValueAt(i, 1); // NHÂN VIÊN
            rowData[3] = trangThai ? "Đã Phân Công" : "Chưa phân công"; // TRẠNG THÁI
            Object chiTiet = modelNhanVien.getValueAt(i, 3);
            rowData[4] = chiTiet != null ? chiTiet : "Không có"; // CHI TIẾT CÔNG VIỆC

            if (trangThai) {
                checkedEmployees.add(rowData);
            } else {
                uncheckedEmployees.add(rowData);
            }
        }

        // Sắp xếp các nhân viên đã phân công theo tên máy
        checkedEmployees.sort(Comparator.comparing(o -> o[1].toString()));

        // Thêm các nhân viên đã phân công lên trên
        int stt = 1;
        for (Object[] employee : checkedEmployees) {
            employee[0] = stt++;
            modelBaoCao.addRow(employee);
        }

        // Sắp xếp các nhân viên chưa phân công theo tên máy
        uncheckedEmployees.sort(Comparator.comparing(o -> o[1].toString()));

        // Thêm các nhân viên chưa phân công xuống dưới
        for (Object[] employee : uncheckedEmployees) {
            employee[0] = stt++;
            modelBaoCao.addRow(employee);
        }

        // Cập nhật màu sắc cho bảng báo cáo
        tbl_bao_cao.setDefaultRenderer(Object.class, new CustomRenderer());

        // Hiển thị tab báo cáo
        tabbedPane.setSelectedIndex(1);

    }//GEN-LAST:event_btn_bao_caoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PhanCongCV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PhanCongCV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PhanCongCV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PhanCongCV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PhanCongCV().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_bao_cao;
    private javax.swing.JButton btn_clear;
    private javax.swing.JButton btn_clear1;
    private javax.swing.JButton btn_suaNv;
    private javax.swing.JButton btn_sua_may;
    private javax.swing.JButton btn_them_may;
    private javax.swing.JButton btn_themnv;
    private javax.swing.JButton btn_xoa_may;
    private javax.swing.JButton btn_xoanv;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane tabbedPane;
    private javax.swing.JTable tbl_bao_cao;
    private javax.swing.JTable tbl_may;
    private javax.swing.JTable tbl_nhanvien;
    private javax.swing.JTextField txt_ghi_chu;
    private javax.swing.JLabel txt_ngay;
    private javax.swing.JLabel txt_note;
    private javax.swing.JTextField txt_ten_may;
    private javax.swing.JTextField txt_ten_nhan_vien;
    // End of variables declaration//GEN-END:variables


    private void loadInit() {
        // Khởi tạo danh sách nhân viên và máy
        dataNhanVien = new ArrayList<>(List.of(
            "Văn Hồng", "Tấn Phát", "Dương Hiển", "Văn Sơn", "Trung Tình",
            "Duyên Anh", "Tú Kiều", "Trúc Linh", "Huỳnh Nga", "Văn Tài",
            "Quốc Thái", "Tấn Lộc", "Bảo Lộc"
        ));

        machines = new ArrayList<>(List.of(
            "", "CV-CLS", "CV-HDS", "QC-M01", "ER-HDS", "ER-CLS",
            "ER-HDS", "IR-YMJ", "IR-HDS", "ER-ZB1", "ER-ZB2",
            "ER-ZB3", "ER-ZB4", "PACKING"
        ));

        // Cập nhật bảng nhân viên
        String[] columnNames = {"STT", "Tên Nhân Viên", "Trạng Thái", "Ghi Chú", "Vị Trí", "Máy"};
        DefaultTableModel model = new DefaultTableModel(createEmployeeTableData(), columnNames) {
            @Override
            public Class<?> getColumnClass(int columnIndex) {
                switch (columnIndex) {
                    case 2: // Cột "Trạng Thái" cần trả về Boolean.class
                        return Boolean.class;
                    default:
                        return Object.class;
                }
            }

            @Override
            public boolean isCellEditable(int row, int column) {
                return column == 2 || column == 3 || column == 5;
            }

        };
        tbl_nhanvien.setModel(model);
        tbl_nhanvien.getSelectionModel().addListSelectionListener(this::updateSelectedRowDetails);
        tbl_nhanvien.getColumnModel().getColumn(2).setCellRenderer(new CenteredCheckBoxRenderer());
        tbl_nhanvien.getColumnModel().getColumn(2).setCellEditor(new DefaultCellEditor(new JCheckBox()));

        // Sử dụng DefaultCellEditor để lắng nghe thay đổi của cột "Máy"
        JComboBox<String> comboBox = new JComboBox<>(machines.toArray(new String[0]));
        comboBox.addActionListener(e -> updateStatusOnPositionChange());
        tbl_nhanvien.getColumnModel().getColumn(5).setCellEditor(new DefaultCellEditor(comboBox));

        tbl_nhanvien.getColumnModel().getColumn(3).setCellEditor(new DefaultCellEditor(new JTextField()));

        
        // Cập nhật bảng máy
        DefaultTableModel modelMay = new DefaultTableModel(createMachineTableData(), new String[]{"STT", "TÊN MÁY"}) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        tbl_may.setModel(modelMay);
        tbl_may.getSelectionModel().addListSelectionListener(this::updateSelectedMachineDetails);

        // Cập nhật thông tin chú thích
        txt_note.setText("<html>"
                + "<ul>"
                + "<li><b>CV</b>: Convert</li>"
                + "<li><b>EH</b>: Encode hangtag</li>"
                + "<li><b>ER</b>: Encode Roll</li>"
                + "<li><b>IR</b>: Injet Roll</li>"
                + "<li><b>IH</b>: Injet Hangtag</li>"
                + "</ul></html>");
    }

    private Object[][] createEmployeeTableData() {
        List<String> leaders = Arrays.asList("Dương Hiển", "Văn Hồng");
        Object[][] tableData = new Object[dataNhanVien.size()][6];
        for (int i = 0; i < dataNhanVien.size(); i++) {
            tableData[i][0] = i + 1; // STT
            tableData[i][1] = dataNhanVien.get(i); // Tên Nhân Viên
            tableData[i][2] = Boolean.FALSE; // Trạng Thái
            tableData[i][3] = ""; // Ghi Chú
            tableData[i][4] = leaders.contains(dataNhanVien.get(i)) ? "Leader" : "Nhân Viên"; // Vị Trí (có thể cập nhật sau)
            tableData[i][5] = machines.get(0); // Máy (mặc định là máy đầu tiên trong danh sách)
        }
        return tableData;
    }

    private Object[][] createMachineTableData() {
        Object[][] tableData = new Object[machines.size()][2];
        for (int i = 0; i < machines.size(); i++) {
            tableData[i][0] = i + 1; // STT
            tableData[i][1] = machines.get(i); // Tên Máy
        }
        return tableData;
    }

    private void updateSelectedRowDetails(ListSelectionEvent event) {
        if (!event.getValueIsAdjusting()) {
            int selectedRow = tbl_nhanvien.getSelectedRow();
            if (selectedRow != -1) {
                String tenNhanVien = (String) tbl_nhanvien.getValueAt(selectedRow, 1);
                String ghiChu = (String) tbl_nhanvien.getValueAt(selectedRow, 3);
                txt_ten_nhan_vien.setText(tenNhanVien);
                txt_ghi_chu.setText(ghiChu);
            }
        }
    }

    private void updateStatusOnPositionChange() {
        int selectedRow = tbl_nhanvien.getSelectedRow();
        if (selectedRow >= 0) {
            String selectedPosition = (String) tbl_nhanvien.getValueAt(selectedRow, 5);
            boolean isAssigned = selectedPosition != null && !selectedPosition.isEmpty();
            tbl_nhanvien.setValueAt(isAssigned, selectedRow, 2);
        }
    }

    private void updateMachineTable() {
        DefaultTableModel modelMay = new DefaultTableModel(createMachineTableData(), new String[]{"STT", "TÊN MÁY"}) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        tbl_may.setModel(modelMay);
    }

    private void updateSelectedMachineDetails(ListSelectionEvent event) {
        if (!event.getValueIsAdjusting()) {
            int selectedRow = tbl_may.getSelectedRow();
            if (selectedRow != -1) {
                String tenMay = (String) tbl_may.getValueAt(selectedRow, 1);
                txt_ten_may.setText(tenMay);
            }
        }
    }

    private boolean validation(String tenMay) {
        return !tenMay.isEmpty() && !machines.contains(tenMay);
    }

    class CenteredCheckBoxRenderer extends JCheckBox implements TableCellRenderer {
        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            setSelected((Boolean) value);
            setHorizontalAlignment(SwingConstants.CENTER);
            return this;
        }
    }
    
    class CustomRenderer extends DefaultTableCellRenderer {
    @Override
    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
        Component cell = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);

        // Lấy giá trị của cột TRẠNG THÁI để xác định màu nền
        String status = (String) table.getValueAt(row, 3); // Cột TRẠNG THÁI là cột thứ 4 (chỉ số 3)
        
        // Thiết lập màu nền dựa trên giá trị của cột TRẠNG THÁI
        if ("Đã Phân Công".equals(status)) {
            cell.setBackground(new Color(0, 255, 127)); // Màu xanh lá RGB (0, 255, 0)
        } else if ("Chưa phân công".equals(status)) {
            cell.setBackground(new Color(255, 106, 106)); // Màu đỏ RGB (255, 0, 0)
        } else {
            cell.setBackground(new Color(255, 255, 255)); // Màu trắng RGB (255, 255, 255)
        }
        
        // Đảm bảo màu nền không bị ảnh hưởng khi hàng được chọn
        if (isSelected) {
            cell.setForeground(table.getSelectionForeground());
            cell.setBackground(table.getSelectionBackground());
        } else {
            cell.setForeground(table.getForeground());
        }

        return cell;
    }}
}
