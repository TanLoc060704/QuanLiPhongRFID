/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Main;

import java.awt.Dimension;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.math.BigInteger;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.DateUtil;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author rfid
 */
public class ChuyenDoiUpc extends javax.swing.JFrame {
    private File selectedFile ;
    private final String pathData = "W:\\12-Xulydulieu\\Database\\SKU.xlsx";
    private final String teaplatePath = "W:\\12-Xulydulieu\\Database\\CheckList.xlsx";
    private Map<String, String[]> skuDataMap = new HashMap<>();
    private File fileImport;
    private Map<String, String[]> fileDataImport = new HashMap<>();
    /**
     * Creates new form ChuyenDoiUpc
     */
    public ChuyenDoiUpc() {
        initComponents();
        loadSkuFromData();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem2 = new javax.swing.JCheckBoxMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu5 = new javax.swing.JMenu();
        jMenu6 = new javax.swing.JMenu();
        lbl_lable = new javax.swing.JLabel();
        btn_path_fo = new javax.swing.JButton();
        txt_path_folder = new javax.swing.JTextField();
        frame_Manual = new javax.swing.JPanel();
        txt_qty = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        btn_run = new javax.swing.JButton();
        cbo_sku = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txt_upc = new javax.swing.JTextField();
        cbo_partition = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        cbo_filter = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        txt_serial = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txa_hienthi = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        btn_Partno = new javax.swing.JRadioButton();
        btn_StockNum = new javax.swing.JRadioButton();
        btn_Color = new javax.swing.JRadioButton();
        btn_Material = new javax.swing.JRadioButton();
        btn_Madein = new javax.swing.JRadioButton();
        btn_Text2 = new javax.swing.JRadioButton();
        btn_Price = new javax.swing.JRadioButton();
        btn_Text1 = new javax.swing.JRadioButton();
        btn_Text3 = new javax.swing.JRadioButton();
        btn_Text4 = new javax.swing.JRadioButton();
        Btn_ItemDes = new javax.swing.JRadioButton();
        btn_Barcode = new javax.swing.JRadioButton();
        btn_Vsn = new javax.swing.JRadioButton();
        btn_Catgory = new javax.swing.JRadioButton();
        btn_Size = new javax.swing.JRadioButton();
        btn_Style = new javax.swing.JRadioButton();
        btn_Item = new javax.swing.JRadioButton();
        btn_QRcode = new javax.swing.JRadioButton();
        cbo_nguoi_tao_du_lieu = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        txt_ma_lenh = new javax.swing.JTextField();
        cbo_masp = new javax.swing.JComboBox<>();
        txt_po = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        cbo_khachhang = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        txt_tong_don = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txa_hienthitudong = new javax.swing.JTextArea();
        btn_import = new javax.swing.JButton();
        btn_run_tu_dong = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cbo_may = new javax.swing.JComboBox<>();

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        jCheckBoxMenuItem2.setSelected(true);
        jCheckBoxMenuItem2.setText("jCheckBoxMenuItem2");

        jMenu1.setText("jMenu1");

        jMenu2.setText("jMenu2");

        jMenu5.setText("File");
        jMenuBar2.add(jMenu5);

        jMenu6.setText("Edit");
        jMenuBar2.add(jMenu6);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 236, 130));

        lbl_lable.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        lbl_lable.setText("Tạo EPC theo chuẩn Gtin + Serial");

        btn_path_fo.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btn_path_fo.setText("Output");
        btn_path_fo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_path_foActionPerformed(evt);
            }
        });

        txt_path_folder.setEditable(false);
        txt_path_folder.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        frame_Manual.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        frame_Manual.setToolTipText("");

        txt_qty.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel6.setText("Q'ty");

        btn_run.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btn_run.setText("Generate");
        btn_run.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_runActionPerformed(evt);
            }
        });

        cbo_sku.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbo_sku.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbo_sku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbo_skuActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel1.setText("SKU");

        jLabel2.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel2.setText("UPC:");

        jLabel3.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel3.setText("Partition:");

        txt_upc.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        cbo_partition.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbo_partition.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "5", "4", "6", "3", "2", "1", " " }));

        jLabel4.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel4.setText("Filter:");

        cbo_filter.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbo_filter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "0", "2", "3", "4", "5", "6", "7", " " }));

        jLabel5.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel5.setText("Serial:");

        txt_serial.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel9.setText("Tạo thủ công");

        txa_hienthi.setColumns(20);
        txa_hienthi.setRows(5);
        jScrollPane1.setViewportView(txa_hienthi);

        javax.swing.GroupLayout frame_ManualLayout = new javax.swing.GroupLayout(frame_Manual);
        frame_Manual.setLayout(frame_ManualLayout);
        frame_ManualLayout.setHorizontalGroup(
            frame_ManualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frame_ManualLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(frame_ManualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(frame_ManualLayout.createSequentialGroup()
                        .addGroup(frame_ManualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(frame_ManualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel4))
                        .addGap(37, 37, 37)
                        .addGroup(frame_ManualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(frame_ManualLayout.createSequentialGroup()
                                .addGroup(frame_ManualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(cbo_partition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbo_filter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(frame_ManualLayout.createSequentialGroup()
                                .addGroup(frame_ManualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txt_qty, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                                    .addComponent(txt_upc, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_serial))
                                .addGap(100, 100, 100)
                                .addComponent(btn_run))))
                    .addGroup(frame_ManualLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(67, 67, 67)
                        .addComponent(cbo_sku, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(frame_ManualLayout.createSequentialGroup()
                        .addGap(173, 173, 173)
                        .addComponent(jLabel9)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        frame_ManualLayout.setVerticalGroup(
            frame_ManualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, frame_ManualLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(frame_ManualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cbo_sku, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(frame_ManualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_upc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(frame_ManualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_serial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(22, 22, 22)
                .addGroup(frame_ManualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(btn_run))
                .addGap(18, 18, 18)
                .addGroup(frame_ManualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(frame_ManualLayout.createSequentialGroup()
                        .addGroup(frame_ManualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbo_partition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(frame_ManualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbo_filter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(56, 56, 56))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btn_Partno.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_Partno.setText("Part No.");
        btn_Partno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_PartnoActionPerformed(evt);
            }
        });

        btn_StockNum.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_StockNum.setText("Stock Number");
        btn_StockNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_StockNumActionPerformed(evt);
            }
        });

        btn_Color.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_Color.setText("Color");
        btn_Color.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ColorActionPerformed(evt);
            }
        });

        btn_Material.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_Material.setText("Material");
        btn_Material.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_MaterialActionPerformed(evt);
            }
        });

        btn_Madein.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_Madein.setText("Made in");
        btn_Madein.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_MadeinActionPerformed(evt);
            }
        });

        btn_Text2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_Text2.setText("Text2");
        btn_Text2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Text2ActionPerformed(evt);
            }
        });

        btn_Price.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_Price.setText("Price");
        btn_Price.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_PriceActionPerformed(evt);
            }
        });

        btn_Text1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_Text1.setText("Text1");
        btn_Text1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Text1ActionPerformed(evt);
            }
        });

        btn_Text3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_Text3.setText("Text3");
        btn_Text3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Text3ActionPerformed(evt);
            }
        });

        btn_Text4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_Text4.setText("Text4");
        btn_Text4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Text4ActionPerformed(evt);
            }
        });

        Btn_ItemDes.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Btn_ItemDes.setText("Item Descriptions");
        Btn_ItemDes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_ItemDesActionPerformed(evt);
            }
        });

        btn_Barcode.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_Barcode.setText("Barcode");
        btn_Barcode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_BarcodeActionPerformed(evt);
            }
        });

        btn_Vsn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_Vsn.setText("VSN");
        btn_Vsn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_VsnActionPerformed(evt);
            }
        });

        btn_Catgory.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_Catgory.setText("Catgory");
        btn_Catgory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CatgoryActionPerformed(evt);
            }
        });

        btn_Size.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_Size.setText("Size");
        btn_Size.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SizeActionPerformed(evt);
            }
        });

        btn_Style.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_Style.setText("Style");
        btn_Style.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_StyleActionPerformed(evt);
            }
        });

        btn_Item.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_Item.setText("Item");
        btn_Item.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ItemActionPerformed(evt);
            }
        });

        btn_QRcode.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_QRcode.setText("QR Code");
        btn_QRcode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_QRcodeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Btn_ItemDes, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_Barcode, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_Vsn, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_Catgory, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_Size, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_Style, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_Item, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_QRcode, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_Partno, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_StockNum, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_Color, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_Material, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_Price, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_Text1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_Madein, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_Text2, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btn_Text3, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_Text4, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btn_Item)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_QRcode)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_Partno)
                        .addGap(5, 5, 5)
                        .addComponent(btn_StockNum)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_Color)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_Material))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Btn_ItemDes)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_Barcode)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_Vsn)
                        .addGap(5, 5, 5)
                        .addComponent(btn_Catgory)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_Size)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_Style)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btn_Madein)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_Text2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btn_Price)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_Text1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btn_Text4)
                    .addComponent(btn_Text3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cbo_nguoi_tao_du_lieu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbo_nguoi_tao_du_lieu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nguyễn Thanh Dương Hiển", "Nguyễn Tấn Lộc" }));
        cbo_nguoi_tao_du_lieu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbo_nguoi_tao_du_lieuActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel13.setText("Người tạo dữ liệu:");

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel8.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel8.setText("Mã Lệnh:");

        txt_ma_lenh.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        cbo_masp.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbo_masp.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        txt_po.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel10.setText("Khách hàng:");

        jLabel12.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel12.setText("PO:");

        cbo_khachhang.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbo_khachhang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel11.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel11.setText("Mã sản phẩm:");

        txt_tong_don.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel14.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel14.setText("Tổng đơn:");

        jLabel16.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel16.setText("Thông tin đơn hàng");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel14))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(cbo_masp, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 143, Short.MAX_VALUE))
                                    .addComponent(txt_po)
                                    .addComponent(txt_tong_don)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(19, 19, 19)
                                        .addComponent(jLabel8))
                                    .addComponent(jLabel10))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cbo_khachhang, 0, 325, Short.MAX_VALUE)
                                    .addComponent(txt_ma_lenh)))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addComponent(jLabel16)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel16)
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txt_ma_lenh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbo_khachhang, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(cbo_masp, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_po, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_tong_don, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addGap(33, 33, 33))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txa_hienthitudong.setColumns(20);
        txa_hienthitudong.setRows(5);
        jScrollPane2.setViewportView(txa_hienthitudong);

        btn_import.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btn_import.setText("Import");
        btn_import.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_importActionPerformed(evt);
            }
        });

        btn_run_tu_dong.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btn_run_tu_dong.setText("Run");
        btn_run_tu_dong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_run_tu_dongActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel15.setText("Tạo tự động");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn_import, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_run_tu_dong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel15)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btn_import)
                        .addGap(201, 201, 201)
                        .addComponent(btn_run_tu_dong)))
                .addGap(21, 21, 21))
        );

        jLabel7.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel7.setText("Máy:");

        cbo_may.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbo_may.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ER-ZB1", "ER-ZB2", "ER-ZB3", "ER-ZB4", "ER-HDS", "ER-CLS", "IR-YMJ", "IR-HDS", " " }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btn_path_fo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_path_folder, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(frame_Manual, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbo_nguoi_tao_du_lieu, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbo_may, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(241, 241, 241)
                                .addComponent(lbl_lable)))
                        .addGap(238, 238, 238)))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(lbl_lable)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(cbo_may, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel13)
                        .addComponent(cbo_nguoi_tao_du_lieu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(frame_Manual, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_path_folder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_path_fo))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_path_foActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_path_foActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooserInput = new JFileChooser();
        fileChooserInput.setDialogTitle("Chọn thư mục xuất file Excel");
        fileChooserInput.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        fileChooserInput.setPreferredSize(new Dimension(800, 600));
        int returnValue = fileChooserInput.showOpenDialog(this);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File selectedDirectory = fileChooserInput.getSelectedFile();
            txt_path_folder.setText(selectedDirectory.getAbsolutePath());
        }
    }//GEN-LAST:event_btn_path_foActionPerformed

    private void btn_runActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_runActionPerformed

        String upc = txt_upc.getText().trim();
        BigInteger serial = convertStringToBigInteger(txt_serial.getText().trim());
        String partition = cbo_partition.getSelectedItem().toString();
        String filter = cbo_filter.getSelectedItem().toString();
        int qty = Integer.parseInt(txt_qty.getText().trim());
        String outputPath = txt_path_folder.getText().trim();
        String He = "48";
        String sku = cbo_sku.getSelectedItem().toString();
        String stt = "";
        String tkh = (String) cbo_khachhang.getSelectedItem();
        String msp = (String) cbo_masp.getSelectedItem();
        String maLenh = txt_ma_lenh.getText();
        String tongDH = txt_tong_don.getText();
        String Po = txt_po.getText();
        String nguoiTaoDuLieu = (String) cbo_nguoi_tao_du_lieu.getSelectedItem();
        
        
        
        
        
        
        xuLyDuLieu(upc,serial,partition,filter,qty,outputPath,He,sku);
        xuLyXuatCheckList(tkh,msp,maLenh,tongDH,Po,nguoiTaoDuLieu,sku,qty+"",teaplatePath,outputPath);
//        if (upc.isEmpty() || serial.equals(BigInteger.ZERO) || outputPath.isEmpty()) {
//            JOptionPane.showMessageDialog(this, "Vui lòng nhập đủ thông tin!");
//            return;
//        }

//        StringBuilder sb = new StringBuilder();
//        Workbook workbook = new XSSFWorkbook();
//        Sheet sheet = workbook.createSheet("Data");
//        Row headerRow = sheet.createRow(0);
//        headerRow.createCell(0).setCellValue("UPC");
//        headerRow.createCell(1).setCellValue("Serial");
//        headerRow.createCell(2).setCellValue("EPC");
//
//        for (int i = 0; i < qty; i++) {
//            String epc = converUpcToEpc(formatUpc(upc), serial, He, filter, partition);
//            Row row = sheet.createRow(i+1);
//            row.createCell(0).setCellValue(upc);
//            row.createCell(1).setCellValue(serial+"");
//            row.createCell(2).setCellValue(epc);
//            serial = serial.add(BigInteger.ONE);
//            sb.append("EPC" + (i + 1) + ":" + epc).append("\n");
//        }
//
//        txa_hienthi.setText(sb.toString());
//        writeToExcel(outputPath, workbook);
//        updateCurrentSerialColumn();
//        loadSkuFromData();
//      
//        
//        if (cbo_sku.getItemCount() > 0) {
//            cbo_sku.setSelectedItem(sku);
//        }
    }//GEN-LAST:event_btn_runActionPerformed
    private void xuLyXuatCheckListNhieuFile(String tenKh,String maSP,String malenh, String tongDonHang, String Po, String nguoiTaoDuLieu,Map<String, String[]> dataSku,String teamplatePath, String outhPath){
            try{
                //tạo file name
                String tenMay = (String) cbo_may.getSelectedItem();
                String fullmaLenh = txt_ma_lenh.getText();
                String maLenh = fullmaLenh.replace("/", "-");        
                String sku = (String) cbo_sku.getSelectedItem();
                String todayDate = new SimpleDateFormat("yyyy-MM-dd").format(new Date());
                String time = new SimpleDateFormat("HH-mm-ss").format(new Date());
                String fileName = tenMay + "_" + maLenh + "_" + sku + "_" + todayDate + "_" + time + ".xlsx";
                String fileNamed = "";
                
                Path outputPath = Paths.get(outhPath, fileName);
                Files.copy(Paths.get(teamplatePath), outputPath);

                try(FileInputStream fileInputStream = new FileInputStream(outputPath.toString());
                    Workbook workbook = new XSSFWorkbook(fileInputStream)){
                    Sheet sheet = workbook.getSheetAt(0);

                    createRowAndCell(sheet, 0, 12, tenKh);
                    createRowAndCell(sheet, 2, 19, maSP);
                    createRowAndCell(sheet, 2, 11,todayDate);
                    createRowAndCell(sheet, 3, 11,"DHH" + fullmaLenh );
                    createRowAndCell(sheet, 3, 20, tongDonHang);
                    createRowAndCell(sheet, 5, 9, Po);
                    createRowAndCell(sheet, 13, 26, nguoiTaoDuLieu);
                    createRowAndCell(sheet, 16, 8, tenMay);
                    
                    int rowIndexTable = 19;
                    int cellIndexTableStt = 5;
                    int cellIndexTableSku = 7;
                    int cellIndexTableFileName = 16;
                    int cellIndexTableQty = 41;
                    
                    for(Map.Entry<String,String[]> entry : dataSku.entrySet()){
                        String[] values = entry.getValue();
                        fileNamed = tenMay + "_" + maLenh + "_" + sku + "_" + todayDate + "_" + time + ".xlsx";
                        createRowAndCell(sheet, rowIndexTable, cellIndexTableStt, 1+"");
                        createRowAndCell(sheet, rowIndexTable, cellIndexTableSku, values[1]);
                        createRowAndCell(sheet, rowIndexTable, cellIndexTableQty, values[2]);
                        createRowAndCell(sheet, rowIndexTable, cellIndexTableFileName, fileNamed);
                            
                        rowIndexTable ++;
                       
                    }

                    
                    


    //                System.out.println("tenKH"+tenKh);
    //                System.out.println("maSP"+maSP);
    //                System.out.println("tongDonHang"+tongDonHang);
    //                System.out.println("PO"+Po);
    //                System.out.println("NguoiTaoDuLieu"+nguoiTaoDuLieu);
    //                System.out.println("Malenh"+malenh);
    //                System.out.println("SKU"+Sku);
    //                System.out.println("Qty"+Qty);
    //                System.out.println("teamplatepath"+teamplatePath);
    //                System.out.println("outpath"+outhPath);
    //                System.out.println("filename"+fileName);


                    //xuat file excel
                    try(FileOutputStream fileOutputStream = new FileOutputStream(outputPath.toString())){
                        workbook.write(fileOutputStream);
                        System.out.println("Xuat file thanh cong");
                    }

                }
            }
            catch(Exception e){
                System.err.println("Đã xảy ra lỗi: " + e.getMessage());
                e.printStackTrace();
            }
        }
    
    
    
    
    private void xuLyXuatCheckList(String tenKh,String maSP,String malenh, String tongDonHang, String Po, String nguoiTaoDuLieu,String Sku,String Qty, String teamplatePath, String outhPath){
        try{
            //tạo file name
            String tenMay = (String) cbo_may.getSelectedItem();
            String fullmaLenh = txt_ma_lenh.getText();
            String maLenh = fullmaLenh.replace("/", "-");        
            String sku = (String) cbo_sku.getSelectedItem();
            String todayDate = new SimpleDateFormat("yyyy-MM-dd").format(new Date());
            String time = new SimpleDateFormat("HH-mm-ss").format(new Date());
            String fileName = tenMay + "_" + maLenh + "_" + sku + "_" + todayDate + "_" + time + ".xlsx";
            
            Path outputPath = Paths.get(outhPath, fileName);
            Files.copy(Paths.get(teamplatePath), outputPath);
            
            try(FileInputStream fileInputStream = new FileInputStream(outputPath.toString());
                Workbook workbook = new XSSFWorkbook(fileInputStream)){
                Sheet sheet = workbook.getSheetAt(0);
                
                createRowAndCell(sheet, 0, 12, tenKh);
                createRowAndCell(sheet, 2, 19, maSP);
                createRowAndCell(sheet, 2, 11,todayDate);
                createRowAndCell(sheet, 3, 11,"DHH" + fullmaLenh );
                createRowAndCell(sheet, 3, 20, tongDonHang);
                createRowAndCell(sheet, 5, 9, Po);
                createRowAndCell(sheet, 13, 26, nguoiTaoDuLieu);
                createRowAndCell(sheet, 16, 8, tenMay);
                createRowAndCell(sheet, 19, 5, 1+"");
                createRowAndCell(sheet, 19, 7, sku);
                createRowAndCell(sheet, 19, 16, fileName);
                createRowAndCell(sheet, 19, 41, Qty);
      
//                System.out.println("tenKH"+tenKh);
//                System.out.println("maSP"+maSP);
//                System.out.println("tongDonHang"+tongDonHang);
//                System.out.println("PO"+Po);
//                System.out.println("NguoiTaoDuLieu"+nguoiTaoDuLieu);
//                System.out.println("Malenh"+malenh);
//                System.out.println("SKU"+Sku);
//                System.out.println("Qty"+Qty);
//                System.out.println("teamplatepath"+teamplatePath);
//                System.out.println("outpath"+outhPath);
//                System.out.println("filename"+fileName);

                
                //xuat file excel
                try(FileOutputStream fileOutputStream = new FileOutputStream(outputPath.toString())){
                    workbook.write(fileOutputStream);
                    System.out.println("Xuat file thanh cong");
                }
                
            }
        }
        catch(Exception e){
            System.err.println("Đã xảy ra lỗi: " + e.getMessage());
            e.printStackTrace();
        }
    }
    
    
    private void createRowAndCell(Sheet sheet, int indexRow, int indexCell,String value){
        Row row = sheet.getRow(indexRow);
        if (row == null) {
            row = sheet.createRow(indexRow);
        }
        Cell cell = row.getCell(indexCell);
        if (cell == null) {
            cell = row.createCell(indexCell);
        }
        cell.setCellValue(value);
    }
    
    private void xuLyDuLieu(String upc ,BigInteger serial, String partition, String filter, int qty, String outputPath, String He,String sku){
        
        StringBuilder sb = new StringBuilder();
        Workbook workbook = new XSSFWorkbook();
        Sheet sheet = workbook.createSheet("Data");
        Row headerRow = sheet.createRow(0);
        headerRow.createCell(0).setCellValue("UPC");
        headerRow.createCell(1).setCellValue("Serial");
        headerRow.createCell(2).setCellValue("EPC");

        for (int i = 0; i < qty; i++) {
            String epc = converUpcToEpc(formatUpc(upc), serial, He, filter, partition);
            Row row = sheet.createRow(i+1);
            row.createCell(0).setCellValue(upc);
            row.createCell(1).setCellValue(serial+"");
            row.createCell(2).setCellValue(epc);
            serial = serial.add(BigInteger.ONE);
            sb.append("EPC" + (i + 1) + ":" + epc).append("\n");
        }

        txa_hienthi.setText(sb.toString());
        writeToExcel(outputPath, workbook);
        updateCurrentSerialColumn();
        loadSkuFromData();
      
        
        if (cbo_sku.getItemCount() > 0) {
            cbo_sku.setSelectedItem(sku);
        }
        
    }
    
    private void cbo_skuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbo_skuActionPerformed
        // TODO add your handling code here:
        System.out.println(cbo_sku.getSelectedItem());
        String selectedSku = (String) cbo_sku.getSelectedItem();
        if (selectedSku != null && skuDataMap.containsKey(selectedSku)) {
            String[] data = skuDataMap.get(selectedSku);
            System.out.println(data[6]);
            cbo_partition.setSelectedItem(data[0]);
            cbo_filter.setSelectedItem(data[1]);
            txt_serial.setText(data[2]);
            txt_upc.setText(data[3]);
            cbo_khachhang.setSelectedItem(data[4]);
            cbo_masp.setSelectedItem(data[5]);
        } else {
            cbo_partition.setSelectedItem("");
            cbo_filter.setSelectedItem("");
            txt_serial.setText("");
            txt_upc.setText("");
        }
        
    }//GEN-LAST:event_cbo_skuActionPerformed

    private void btn_importActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_importActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooserImport = new JFileChooser();
        fileChooserImport.setDialogTitle("Import file excel");
        fileChooserImport.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fileChooserImport.setPreferredSize(new Dimension(800, 600));
        int returnValue = fileChooserImport.showOpenDialog(this);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            fileImport = fileChooserImport.getSelectedFile();
            readFileExcel();
        }
    }//GEN-LAST:event_btn_importActionPerformed

    public void readFileExcel() {
        try(FileInputStream fileinputstream = new FileInputStream(fileImport);
            Workbook workbook = new XSSFWorkbook(fileinputstream)){
            
            StringBuilder sb = new StringBuilder();
            Sheet sheet = workbook.getSheetAt(0);
            for(int i = 1 ; i < sheet.getLastRowNum(); i++){
                Row row = sheet.getRow(i);
                if(row != null){
                    Cell cellStt = row.getCell(0);
                    Cell cellSKU = row.getCell(1);
                    Cell cellQty = row.getCell(2);
                    
                    String valueSku = getCellStringValue(cellSKU);
                    String valueQty = getCellStringValue(cellQty);
                    
                    sb.append("SKU: ").append(valueSku).append(", Qty: ").append(valueQty).append("\n");
                    
                    String[] data = new String[3];
                    data[0] = getCellValue(sheet, i, 0);
                    data[1] = getCellValue(sheet, i, 1);
                    data[2] = getCellValue(sheet, i, 2);
                    
                    fileDataImport.put(valueSku, data);
                }
            }
            printMapStructure(fileDataImport);
            txa_hienthitudong.setText(sb.toString());
            
        } catch (IOException e) {
            Logger.getLogger(ChuyenDoiUpc.class.getName()).log(Level.SEVERE, null, e);
        }
    }
    
    private void printMapStructure(Map<String, String[]> map) {
        StringBuilder sb = new StringBuilder("Cấu trúc của Map:\n");
        for (Map.Entry<String, String[]> entry : map.entrySet()) {
            sb.append("Key: ").append(entry.getKey()).append(", Value: [");
            String[] values = entry.getValue();
            for (int i = 0; i < values.length; i++) {
                sb.append(values[i]);
                if (i < values.length - 1) sb.append(", ");
            }
            sb.append("]\n");
        }
        System.out.println(sb.toString());
    }
    
    private void Btn_ItemDesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_ItemDesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Btn_ItemDesActionPerformed

    private void btn_BarcodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_BarcodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_BarcodeActionPerformed

    private void btn_VsnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_VsnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_VsnActionPerformed

    private void btn_CatgoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CatgoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_CatgoryActionPerformed

    private void btn_SizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SizeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_SizeActionPerformed

    private void btn_StyleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_StyleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_StyleActionPerformed

    private void btn_ItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_ItemActionPerformed

    private void btn_QRcodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_QRcodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_QRcodeActionPerformed

    private void btn_PartnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_PartnoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_PartnoActionPerformed

    private void btn_StockNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_StockNumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_StockNumActionPerformed

    private void btn_ColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ColorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_ColorActionPerformed

    private void btn_MaterialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_MaterialActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_MaterialActionPerformed

    private void btn_MadeinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_MadeinActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_MadeinActionPerformed

    private void btn_Text2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Text2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_Text2ActionPerformed

    private void btn_PriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_PriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_PriceActionPerformed

    private void btn_Text1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Text1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_Text1ActionPerformed

    private void btn_Text3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Text3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_Text3ActionPerformed

    private void btn_Text4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Text4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_Text4ActionPerformed

    private void btn_run_tu_dongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_run_tu_dongActionPerformed
        // TODO add your handling code here:
//        printMapStructure(skuDataMap);

        String upc = txt_upc.getText().trim();
        BigInteger serial = convertStringToBigInteger(txt_serial.getText().trim());
        String partition = cbo_partition.getSelectedItem().toString();
        String filter = cbo_filter.getSelectedItem().toString();
//        int qty = Integer.parseInt(txt_qty.getText().trim());
        String outputPath = txt_path_folder.getText().trim();
        String He = "48";
        String tkh = (String) cbo_khachhang.getSelectedItem();
        String msp = (String) cbo_masp.getSelectedItem();
        String maLenh = txt_ma_lenh.getText();
        String tongDH = txt_tong_don.getText();
        String Po = txt_po.getText();
        String nguoiTaoDuLieu = (String) cbo_nguoi_tao_du_lieu.getSelectedItem();

        String sku = "";
        int qty = 0;
        System.out.println("o ngoai:"+upc);
        for (Map.Entry<String, String[]> entry : fileDataImport.entrySet()) {
            String[] values = entry.getValue();
            
            sku = values[1];
            qty = Integer.parseInt(values[2]);
            cbo_sku.setSelectedItem(sku);
            System.out.println("sku:" + sku);
            System.out.println("UPC:" + upc);
            System.out.println("Qty:" + qty);
            txt_qty.setText(String.valueOf(qty));
//            xuLyDuLieu(upc, serial, partition, filter, qty, outputPath, He, sku);
//            xuLyXuatCheckListNhieuFile(tkh,msp,maLenh,tongDH,Po,nguoiTaoDuLieu,fileDataImport,teaplatePath,outputPath);
//             System.out.println("sku:" + sku);
//            System.out.println("qty:" + qty);
//            System.out.println("upc:"+ upc);
//            System.out.println("serial:"+ serial);
//            System.out.println("partition:"+ partition);
//            System.out.println("filter:"+ filter); 
             
        }
        
              
    }//GEN-LAST:event_btn_run_tu_dongActionPerformed

    private void cbo_nguoi_tao_du_lieuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbo_nguoi_tao_du_lieuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbo_nguoi_tao_du_lieuActionPerformed
    
    private void loadSkuFromData() {
        try (FileInputStream fileInputStream = new FileInputStream(new File(pathData));
            Workbook workbook = new XSSFWorkbook(fileInputStream)) {
            Sheet sheet = workbook.getSheetAt(0);

            cbo_sku.removeAllItems();
            cbo_khachhang.removeAllItems();
            cbo_masp.removeAllItems();

            Set<String> uniqueKhachHangSet = new HashSet<>();
            Set<String> uniqueMaSpSet = new HashSet<>();
            int startRow = 2;

            // Duyệt qua từng hàng của sheet bắt đầu từ dòng thứ tư
            for (int i = startRow; i <= sheet.getLastRowNum(); i++) {
                Row row = sheet.getRow(i);
                if (row != null) {
                    // Lấy ô ở cột thứ 3 (chỉ số cột bắt đầu từ 0, nên cột 3 là index 2)
                    Cell cell = row.getCell(2);

                    if (cell != null) {
                        // Lấy giá trị của ô
                        String value = getCellStringValue(cell);

                        // Thêm giá trị vào cbo_sku
                        cbo_sku.addItem(value);

                        // Lấy dữ liệu từ các dòng thứ 10, 11, 12, 14 (index 9, 10, 11, 13)
                        String[] data = new String[7];
                        data[0] = getCellValue(sheet, i, 9);  // Partition
                        data[1] = getCellValue(sheet, i, 10); // Filter Current
                        data[2] = getCellValue(sheet, i, 11); // Serial
                        data[3] = getCellValue(sheet, i, 13); // UPC (2)
                        data[4] = getCellValue(sheet, i, 1);  // Khách hàng
                        data[5] = getCellValue(sheet, i, 3);  // Mã sản phẩm
                        data[6] = getCellValue(sheet, i, 0);  // Lấy số thứ tự
                        skuDataMap.put(value, data);
                    }

                    Cell cellKh = row.getCell(1);
                    if (cellKh != null) {
                        String khachHang = getCellStringValue(cellKh);

                        if (!uniqueKhachHangSet.contains(khachHang)) {
                            cbo_khachhang.addItem(khachHang); // Thêm giá trị vào cbo_khachhang
                            uniqueKhachHangSet.add(khachHang); // Thêm khách hàng vào Set
                        }
                    }
                    
                    
                    Cell cellMasp = row.getCell(3);
                    if(cellMasp != null){
                        String masp = getCellStringValue(cellMasp);
                        
                        if(!uniqueMaSpSet.contains(masp)){
                            cbo_masp.addItem(masp);
                            uniqueMaSpSet.add(masp);
                        }
                    }
               }
           }
       } catch (IOException e) {
           e.printStackTrace();
       }
   }

    private void updateCurrentSerialColumn() {
        try (FileInputStream fileInputStream = new FileInputStream(new File(pathData));
            Workbook workbook = new XSSFWorkbook(fileInputStream)) {
            Sheet sheet = workbook.getSheetAt(0);
            int currentSerialColIndex = 11; // Cột "Current Serial"
            String qty = txt_qty.getText();
            String selectedSku = (String) cbo_sku.getSelectedItem();
            
            
            //tạo file name
            String tenMay = (String) cbo_may.getSelectedItem();
            String maLenh = txt_ma_lenh.getText();
            String sku = (String) cbo_sku.getSelectedItem();
            String todayDate = new SimpleDateFormat("yyyy-MM-dd").format(new Date());
            String time = new SimpleDateFormat("HH-mm-ss").format(new Date());
            String fileName = tenMay + "_" + maLenh + "_" + sku + "_" + todayDate + "_" + time + ".xlsx";
            
            if (selectedSku != null && skuDataMap.containsKey(selectedSku)) {
                String[] data = skuDataMap.get(selectedSku);
                int rowIndex = Integer.parseInt(data[6])+1; // Giả sử dữ liệu hàng tồn tại ở đây
                int serialHienTai = Integer.parseInt(data[2]);// serial hiện tại
                int newSerial = Integer.parseInt(txt_qty.getText()) + serialHienTai;
                Row rowToUpdate = sheet.getRow(rowIndex);
                if (rowToUpdate != null) {
                    Cell cellToUpdate = rowToUpdate.getCell(currentSerialColIndex);
                    if (cellToUpdate == null) {
                        cellToUpdate = rowToUpdate.createCell(currentSerialColIndex);
                    }
                    cellToUpdate.setCellValue(String.valueOf(newSerial));
                }
                
                // Ghi lịch sử vào sheet thứ hai (sheet 1)
                Sheet sheet1 = workbook.getSheetAt(1);
                int historyRowIndex = sheet1.getLastRowNum() + 1; // Tìm vị trí dòng cuối cùng để ghi lịch sử
                Row historyRow = sheet1.createRow(historyRowIndex);

                // Lấy thông tin thời gian hiện tại
                String currentTime = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date());

                // Điền các giá trị vào dòng lịch sử
                historyRow.createCell(0).setCellValue(currentTime); // Thời gian
                historyRow.createCell(1).setCellValue(txt_ma_lenh.getText()); // Đơn đặt hàng
                historyRow.createCell(2).setCellValue((String)cbo_khachhang.getSelectedItem()); // Khách hàng
                historyRow.createCell(3).setCellValue(selectedSku); // SKU NamViệt
                historyRow.createCell(4).setCellValue(serialHienTai); // Serial Bắt đầu
                historyRow.createCell(5).setCellValue(newSerial - 1); // Serial Kết thúc
                historyRow.createCell(6).setCellValue(qty); // Q'ty
                historyRow.createCell(7).setCellValue(fileName); // Tên File (điền tên file thích hợp)

                try (FileOutputStream fileOutputStream = new FileOutputStream(new File(pathData))) {
                    workbook.write(fileOutputStream);
                    fileOutputStream.flush();
                    JOptionPane.showMessageDialog(this, "Dữ liệu đã được cập nhật thành công!");
                } catch (IOException e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(this, "Có lỗi xảy ra khi lưu file Excel: " + e.getMessage());
                }
            } else {
                JOptionPane.showMessageDialog(this, "SKU đã chọn không hợp lệ hoặc không có dữ liệu.");
            }
        } catch (IOException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Có lỗi xảy ra khi đọc file Excel: " + e.getMessage());
        }
    }
    
    private String getCellStringValue(Cell cell) {
        if (cell != null) {
            switch (cell.getCellType()) {
                case STRING:
                    return cell.getStringCellValue();
                case NUMERIC:
                    // Kiểm tra nếu là dạng số nguyên (không có phần thập phân)
                    if (DateUtil.isCellDateFormatted(cell)) {
                        // Xử lý ngày tháng nếu cần
                        return cell.getDateCellValue().toString();
                    } else {
                        // Định dạng số dưới dạng văn bản
                        return String.format("%.0f", cell.getNumericCellValue());
                    }
                case BOOLEAN:
                    return String.valueOf(cell.getBooleanCellValue());
                case FORMULA:
                    return cell.getCellFormula();
                default:
                    return "UNKNOWN";
            }
        }
        return "";
    }

    private String getCellValue(Sheet sheet, int rowIndex, int colIndex) {
        Row row = sheet.getRow(rowIndex);
        if (row != null) {
            Cell cell = row.getCell(colIndex);
            return getCellStringValue(cell);
        }
        return "";
    }
    
    String formatUpc (String UPC){
        return String.format("%14s", UPC).replace(" ","0");
    }
    
    public String converUpcToEpc(String chuoiUpc, BigInteger serial, String He, String Fi, String Par){
        int lengthUpc = chuoiUpc.length();
        String UpcRemoveCheckDigit = chuoiUpc.substring(0,lengthUpc - 1);
        
        String Indicator ="";
        String GS1CompanyPrefix ="";
        String ItemReferenceNumber ="";
        
        switch (Integer.parseInt(Par)) {
            case 0:
                Indicator = UpcRemoveCheckDigit.substring(0,1);
                GS1CompanyPrefix = UpcRemoveCheckDigit.substring(1,13);
                ItemReferenceNumber = UpcRemoveCheckDigit.substring(13);
//                System.out.println(Indicator);
//                System.out.println(GS1CompanyPrefix);
//                System.out.println(ItemReferenceNumber);
                
                break;
            case 1:
                Indicator = UpcRemoveCheckDigit.substring(0,1);
                GS1CompanyPrefix = UpcRemoveCheckDigit.substring(1,12);
                ItemReferenceNumber = UpcRemoveCheckDigit.substring(12);
                break;
            case 2:
                Indicator = UpcRemoveCheckDigit.substring(0,1);
                GS1CompanyPrefix = UpcRemoveCheckDigit.substring(1,11);
                ItemReferenceNumber = UpcRemoveCheckDigit.substring(11);
                break;
            case 3:
                Indicator = UpcRemoveCheckDigit.substring(0,1);
                GS1CompanyPrefix = UpcRemoveCheckDigit.substring(1,10);
                ItemReferenceNumber = UpcRemoveCheckDigit.substring(10);
                break;
            case 4:
                Indicator = UpcRemoveCheckDigit.substring(0,1);
                GS1CompanyPrefix = UpcRemoveCheckDigit.substring(1,9);
                ItemReferenceNumber = UpcRemoveCheckDigit.substring(9);
                break;
            case 5:
                Indicator = UpcRemoveCheckDigit.substring(0,1);
                GS1CompanyPrefix = UpcRemoveCheckDigit.substring(1,8);
                ItemReferenceNumber = UpcRemoveCheckDigit.substring(8);
                break;
            case 6:
                Indicator = UpcRemoveCheckDigit.substring(0,1);
                GS1CompanyPrefix = UpcRemoveCheckDigit.substring(1,7);
                ItemReferenceNumber = UpcRemoveCheckDigit.substring(7);
                break;
            default:
                System.out.println("Invalid partition value.");
                return "Invalid partition value.";
        }
        
       
        
        String GS1CompanyPrefixCuted = GS1CompanyPrefix;
        String IndicatorAndItemReferenceNumber = Indicator+ItemReferenceNumber;
        BigInteger serialNumber = serial;
        String Header = He;
        String Filter = Fi;
        String Partition = Par;
        
        // Chuyển các phần thành nhị phân
        String binaryHeader = String.format("%8s", new BigInteger(Header).toString(2)).replace(" ", "0");
        String binaryFilter = String.format("%3s", new BigInteger(Filter).toString(2)).replace(" ", "0");
        String binaryPartition = String.format("%3s", new BigInteger(Partition).toString(2)).replace(" ", "0");
        String binarySerialNumber = String.format("%38s", new BigInteger(convertBigIntegerToString(serialNumber)).toString(2)).replace(" ", "0");
        
        String binaryCompany;
        String binaryItem;
        switch (Integer.parseInt(Par)) {
            case 0:
                binaryCompany = String.format("%40s", new BigInteger(GS1CompanyPrefixCuted).toString(2)).replace(" ", "0");
                binaryItem = String.format("%4s", new BigInteger(IndicatorAndItemReferenceNumber).toString(2)).replace(" ", "0");
                break;
            case 1:
                binaryCompany = String.format("%37s", new BigInteger(GS1CompanyPrefixCuted).toString(2)).replace(" ", "0");
                binaryItem = String.format("%7s", new BigInteger(IndicatorAndItemReferenceNumber).toString(2)).replace(" ", "0");
                break;
            case 2:
                binaryCompany = String.format("%34s", new BigInteger(GS1CompanyPrefixCuted).toString(2)).replace(" ", "0");
                binaryItem = String.format("%10s", new BigInteger(IndicatorAndItemReferenceNumber).toString(2)).replace(" ", "0");
                break;
            case 3:
                binaryCompany = String.format("%30s", new BigInteger(GS1CompanyPrefixCuted).toString(2)).replace(" ", "0");
                binaryItem = String.format("%14s", new BigInteger(IndicatorAndItemReferenceNumber).toString(2)).replace(" ", "0");
                break;
            case 4:
                binaryCompany = String.format("%27s", new BigInteger(GS1CompanyPrefixCuted).toString(2)).replace(" ", "0");
                binaryItem = String.format("%17s", new BigInteger(IndicatorAndItemReferenceNumber).toString(2)).replace(" ", "0");
                break;
            case 5:
                binaryCompany = String.format("%24s", new BigInteger(GS1CompanyPrefixCuted).toString(2)).replace(" ", "0");
                binaryItem = String.format("%20s", new BigInteger(IndicatorAndItemReferenceNumber).toString(2)).replace(" ", "0");
                break;
            case 6:
                binaryCompany = String.format("%20s", new BigInteger(GS1CompanyPrefixCuted).toString(2)).replace(" ", "0");
                binaryItem = String.format("%24s", new BigInteger(IndicatorAndItemReferenceNumber).toString(2)).replace(" ", "0");
                break;
            default:
                System.out.println("Invalid partition value.");
                return"Invalid partition value.";
        }
    
        String binaryEPC = binaryHeader + binaryFilter + binaryPartition + binaryCompany + binaryItem + binarySerialNumber;
        System.out.println(binaryToHex(binaryEPC));

        return binaryToHex(binaryEPC);
        
    }
    
    private String binaryToHex(String binaryString) {
        // Đảm bảo độ dài của chuỗi nhị phân là bội số của 4
        int length = binaryString.length();
        int paddingLength = (4 - (length % 4)) % 4;
        String paddedBinary = "0".repeat(paddingLength) + binaryString;

        // Chia chuỗi nhị phân thành các khối 4 bit
        StringBuilder hexString = new StringBuilder();
        for (int i = 0; i < paddedBinary.length(); i += 4) {
            String fourBits = paddedBinary.substring(i, i + 4);
            // Chuyển 4 bit thành ký tự hexadecimal
            hexString.append(Integer.toHexString(Integer.parseInt(fourBits, 2)).toUpperCase());
        }
        return hexString.toString();
    }
    
    public static BigInteger convertStringToBigInteger(String numberStr) {
        try {
            return new BigInteger(numberStr);
        } catch (NumberFormatException e) {
            System.out.println("Chuỗi không hợp lệ: " + numberStr);
            return BigInteger.ZERO; 
        }
    }

    public static String convertBigIntegerToString(BigInteger number) {
        return number.toString(); // Chuyển đổi BigInteger thành chuỗi
    }

    private void writeToExcel(String outputPath, Workbook workbook) {
        try {
            String tenMay = (String) cbo_may.getSelectedItem();
            String maLenh = txt_ma_lenh.getText();
            String sku = (String) cbo_sku.getSelectedItem();
            String todayDate = new SimpleDateFormat("yyyy-MM-dd").format(new Date());
            String time = new SimpleDateFormat("HH-mm-ss").format(new Date());
            String fileName = tenMay + "_" + maLenh + "_" + sku + "_" + todayDate + "_" + time + ".xlsx";
            File file = new File(outputPath, fileName);
            try (FileOutputStream fileOut = new FileOutputStream(file)) {
                workbook.write(fileOut);
                JOptionPane.showMessageDialog(this, "Xuất file thành công: " + file.getAbsolutePath());
            }
        } catch (IOException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi khi xuất file: " + e.getMessage());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChuyenDoiUpc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChuyenDoiUpc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChuyenDoiUpc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChuyenDoiUpc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChuyenDoiUpc().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton Btn_ItemDes;
    private javax.swing.JRadioButton btn_Barcode;
    private javax.swing.JRadioButton btn_Catgory;
    private javax.swing.JRadioButton btn_Color;
    private javax.swing.JRadioButton btn_Item;
    private javax.swing.JRadioButton btn_Madein;
    private javax.swing.JRadioButton btn_Material;
    private javax.swing.JRadioButton btn_Partno;
    private javax.swing.JRadioButton btn_Price;
    private javax.swing.JRadioButton btn_QRcode;
    private javax.swing.JRadioButton btn_Size;
    private javax.swing.JRadioButton btn_StockNum;
    private javax.swing.JRadioButton btn_Style;
    private javax.swing.JRadioButton btn_Text1;
    private javax.swing.JRadioButton btn_Text2;
    private javax.swing.JRadioButton btn_Text3;
    private javax.swing.JRadioButton btn_Text4;
    private javax.swing.JRadioButton btn_Vsn;
    private javax.swing.JButton btn_import;
    private javax.swing.JButton btn_path_fo;
    private javax.swing.JButton btn_run;
    private javax.swing.JButton btn_run_tu_dong;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JComboBox<String> cbo_filter;
    private javax.swing.JComboBox<String> cbo_khachhang;
    private javax.swing.JComboBox<String> cbo_masp;
    private javax.swing.JComboBox<String> cbo_may;
    private javax.swing.JComboBox<String> cbo_nguoi_tao_du_lieu;
    private javax.swing.JComboBox<String> cbo_partition;
    private javax.swing.JComboBox<String> cbo_sku;
    private javax.swing.JPanel frame_Manual;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbl_lable;
    private javax.swing.JTextArea txa_hienthi;
    private javax.swing.JTextArea txa_hienthitudong;
    private javax.swing.JTextField txt_ma_lenh;
    private javax.swing.JTextField txt_path_folder;
    private javax.swing.JTextField txt_po;
    private javax.swing.JTextField txt_qty;
    private javax.swing.JTextField txt_serial;
    private javax.swing.JTextField txt_tong_don;
    private javax.swing.JTextField txt_upc;
    // End of variables declaration//GEN-END:variables
}
